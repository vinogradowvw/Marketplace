spring.application.name=demo
spring.datasource.url=jdbc:postgresql://localhost:5432/market_place
spring.datasource.username=postgres
spring.datasource.password=postgres
spring.jpa.hibernate.ddl-auto=update
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.javax.persistence.schema-generation.create-source=metadata
#spring.jpa.properties.javax.persistence.schema-generation.scripts.action=create
#spring.jpa.properties.javax.persistence.schema-generation.scripts.create-target=src/main/resources/schema.sql
#spring.sql.init.data-locations=src/main/resources/data.sql
spring.sql.init.mode=always
spring.jpa.properties.hibernate.id.new_generator_mappings=false


images.path = "./images"

minio.url=localhost
minio.port=9000
minio.accessKey=minioadmin
minio.secretKey=minioadmin
minio.bucket-name=images
minio.secure=false

jwt.secret=GeC6M5pI3WNimed42hjVb5r1e1udue1RlA1KTn6XijA=
jwt.expirationMs=3600000
jwt.tokenPrefix=Bearer
jwt.headerString=Authorization

bcrypt.rounds = 12

api.url = http://localhost:8000

spring.kafka.bootstrap-servers=https://18.196.226.202:9094
kafka.topic.recSys-req=requests-for-re?sys
kafka.topic.recSys-resp=recommendation-responses
kafka.groupId.recSys=recsys-cons
spring.kafka.consumer.key-deserializer=org.springframework.kafka.support.serializer.StringDeserializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.key-serializer=org.springframework.kafka.support.serializer.StringSerializer
spring.kafka.consumer.auto-offset-reset=earliest