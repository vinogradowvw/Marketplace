name: CI/CD Pipeline

on:
  push:
    branches:
      - feature/*

jobs:
  build:
    runs-on: ubuntu-latest
    name: Build

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup JDK 17
      uses: actions/setup-java@v4
      with:
        cache: 'gradle'
        java-version: '17'
        distribution: 'temurin'

    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@dbbdc275be76ac10734476cc723d82dfe7ec6eda

    - name: Build with Gradle Wrapper
      run: ./gradlew clean build -x test

    - name: Archive build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-artifacts
        path: build/libs/

  test:
    runs-on: ubuntu-latest
    name: Unit tests
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup JDK 17
        uses: actions/setup-java@v4
        with:
          cache: 'gradle'
          java-version: '17'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@dbbdc275be76ac10734476cc723d82dfe7ec6eda

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts

      - name: Run tests
        run: ./gradlew test

      - name: Archive test results
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: build/test-results/

  build-image:
    runs-on: ubuntu-latest
    name: Build and push Docker image
    needs:
        - build
        - test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup JDK 17
        uses: actions/setup-java@v4
        with:
          cache: 'gradle'
          java-version: '17'
          distribution: 'temurin'

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build & push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: Dockerfile
          push: true
          platform: linux/amd64,linux/arm64
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/backend

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs:
        - build-image
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Copy docker-compose file to VPS
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.VPS_IP }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "docker-compose.yaml"
          target: "market_place"

      - name: Start services
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.VPS_IP }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd market_place
            docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_PASSWORD }}
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/backend
            docker tag ${{ secrets.DOCKERHUB_USERNAME }}/backend:latest backend/app:latest
            docker-compose -f docker-compose.yaml up -d
            docker-compose -f docker-compose.yaml ps